<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3aa9defa-c9f7-4ca4-8e89-0f1f4d46dee2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/api_gateway/communication/client/auth_client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/api_gateway/interceptor/auth_client_interceptor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/token/maker.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/token/paseto_maker.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/token/payload.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/authorization_service/interceptor/auth_server_interceptor.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Backend/authorization_service/startup/configuration.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/AccomodationBookingApp.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/AccomodationBookingApp.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/.env" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/.env.local" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/.env.local" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/.idea/protoeditor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/.idea/protoeditor.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/api_gateway/communication/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/api_gateway/communication/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/api_gateway/configuration/configuration.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/api_gateway/configuration/configuration.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/api_gateway/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/api_gateway/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/api_gateway/startup/Configuration.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/api_gateway/startup/Configuration.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/api_gateway/startup/Server.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/api_gateway/startup/Server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/communication/handler/AccountCredentialsHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/communication/handler/AccountCredentialsHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/communication/handler/AccountCredentialsMapper.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/communication/handler/AccountCredentialsMapper.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/communication/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/startup/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/configuration/configuration.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/domain/model/AccountCredentials.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/model/AccountCredentials.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/domain/repository/IAccountCredentialsRepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/repository/IAccountCredentialsRepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/domain/service/AccountCredentialsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/service/AccountCredentialsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/domain/service/IAccountCredentialsService.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/domain/service/IAccountCredentialsService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/authorization_service/persistence/repository/AccountCredentialsRepositoryPG.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/authorization_service/persistence/repository/AccountCredentialsRepositoryPG.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/common/proto/authorization_service/authorization_service.proto" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/common/proto/authorization_service/authorization_service.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service.pb.gw.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service.pb.gw.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/Backend/common/proto/authorization_service/generated/authorization_service_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Database/Authorization/init.sql" beforeDir="false" afterPath="$PROJECT_DIR$/Database/Authorization/init.sql" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2PHSJXn6cPxvvnpl5VXp9qbtWxl" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/aleksandar&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Backend/authorization_service/startup" />
      <recent name="$PROJECT_DIR$/Backend/api_gateway/startup" />
      <recent name="$PROJECT_DIR$/Backend/api_gateway/domain/model" />
      <recent name="$PROJECT_DIR$/Backend/user_profile_service/startup" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build user_profile_service">
    <configuration name="go build user_profile_service" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="AccomodationBookingApp" />
      <working_directory value="$PROJECT_DIR$/Backend/user_profile_service" />
      <envs>
        <env name="AUTHORIZATION_DB_HOST" value="authorization_db" />
        <env name="AUTHORIZATION_DB_NAME" value="authorization" />
        <env name="AUTHORIZATION_DB_PASS" value="password" />
        <env name="AUTHORIZATION_DB_PORT" value="5432" />
        <env name="AUTHORIZATION_DB_USER" value="postgres" />
        <env name="AUTHORIZATION_SERVICE_HOST" value="authorization_service" />
        <env name="AUTHORIZATION_SERVICE_PORT" value="8000" />
        <env name="GATEWAY_PORT" value="8000" />
        <env name="USER_PROFILE_DB_HOST" value="localhost" />
        <env name="USER_PROFILE_DB_NAME" value="user_profile" />
        <env name="USER_PROFILE_DB_PASS" value="password" />
        <env name="USER_PROFILE_DB_PORT" value="5000" />
        <env name="USER_PROFILE_DB_USER" value="postgres" />
        <env name="USER_PROFILE_SERVICE_HOST" value="172.17.0.1" />
        <env name="USER_PROFILE_SERVICE_PORT" value="7000" />
        <env name="GODEBUG" value="http2debug=2 " />
      </envs>
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="user_profile_service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="Backend.user_profile_service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="services">
            <list>
              <option value="user_profile_service" />
            </list>
          </option>
          <option name="sourceFilePath" value="Backend/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Backend.user_profile_service: Compose Deployment" />
      <item itemvalue="Go Build.go build user_profile_service" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Backend.user_profile_service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>